import os

ENV_NAME = 'ALE/MsPacman-v5'
ACTION_SPACE_SIZE = 9
DIFFICULTY = 0

FRAME_WIDTH = 84
FRAME_HEIGHT = 84
FRAME_STACK = 4
FRAME_SKIP = 4
NOOP_MAX = 30

RENDER_MODE = None
TRAINING_MODE = True

LEARNING_RATE = 0.0001
GAMMA = 0.99
BATCH_SIZE = 32
MEMORY_CAPACITY = 500000
TARGET_UPDATE_FREQUENCY = 10000
TRAINING_EPISODES = 100000

EPSILON_START = 1.0
EPSILON_END = 0.05
EPSILON_DECAY = 1700000
DEFAULT_EVALUATE_MODE = False

LEARNING_STARTS = 20000
UPDATE_FREQUENCY = 2

USE_PER = True

ALPHA = 0.6
BETA_START = 0.4
BETA_FRAMES = 1700000
BETA_EXPONENT = 1.02
EPSILON_PER = 1e-6

TREE_CAPACITY = MEMORY_CAPACITY
DEFAULT_NEW_PRIORITY = 1.0

PER_LOG_FREQUENCY = 100
PER_BATCH_SIZE = 50

USE_ONE_CONV_LAYER = False
USE_TWO_CONV_LAYERS = True
USE_THREE_CONV_LAYERS = False

CONV1_CHANNELS = 32
CONV1_KERNEL_SIZE = 8
CONV1_STRIDE = 4

CONV2_CHANNELS = 64
CONV2_KERNEL_SIZE = 4
CONV2_STRIDE = 2

CONV3_CHANNELS = 64
CONV3_KERNEL_SIZE = 3
CONV3_STRIDE = 1

FC_SIZE = 512
GRAD_CLIP_NORM = 5.0

EVAL_EPISODES = 100
EVAL_FREQUENCY = 100

MEMORY_THRESHOLD_PERCENT = 90

RESULTS_DIR = "results"
LOG_DIR = os.path.join(RESULTS_DIR, "logs")
MODEL_DIR = os.path.join(RESULTS_DIR, "models")
PLOT_DIR = os.path.join(RESULTS_DIR, "plots")
DATA_DIR = os.path.join(RESULTS_DIR, "data")

ENABLE_FILE_LOGGING = False
LOGGER_SAVE_INTERVAL = 100
LOGGER_MEMORY_WINDOW = 1000
LOGGER_BATCH_SIZE = 50
LOGGER_DETAILED_INTERVAL = 50
LOGGER_MAJOR_METRICS = ["reward", "loss", "epsilon", "beta"]
VISUALIZATION_SAVE_INTERVAL = 1000

VISUALIZATION_SPECIFIC_EXPERIMENT = '20250430_014335'
